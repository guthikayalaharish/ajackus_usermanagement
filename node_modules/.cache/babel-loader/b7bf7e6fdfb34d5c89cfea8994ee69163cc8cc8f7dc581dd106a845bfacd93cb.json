{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haric\\\\OneDrive\\\\Desktop\\\\user-management-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddUser from \"./components/AddUser\";\nimport UserList from \"./components/UserList\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [isAddUser, setIsAddUser] = useState(false);\n  const [editUser, setEditUser] = useState(null); // Track which user to edit\n  const [currentPage, setCurrentPage] = useState(1); // Track current page\n  const [usersPerPage] = useState(10); // Number of users per page\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await response.json();\n\n    // Map the data to split the name into firstName and lastName\n    const usersWithFirstLastNames = data.map(user => {\n      const [firstName, lastName] = user.name.split(\" \");\n      return {\n        ...user,\n        firstName,\n        lastName,\n        department: user.company.name // Using company name for department\n      };\n    });\n    setUsers(usersWithFirstLastNames);\n  };\n  const handleAddUser = newUser => {\n    setUsers(prevUsers => [...prevUsers, newUser]);\n    setIsAddUser(false); // Close the AddUser form after adding\n  };\n  const handleEditUser = updatedUser => {\n    setUsers(prevUsers => prevUsers.map(user => user.id === updatedUser.id ? updatedUser : user));\n    setEditUser(null); // Clear edit user after saving\n    setIsAddUser(false); // Close the form after editing\n  };\n  const handleDeleteUser = userId => {\n    setUsers(prevUsers => prevUsers.filter(user => user.id !== userId));\n  };\n\n  // Calculate the current users to display based on the current page and users per page\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n  // Handle page change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAddUser(!isAddUser),\n      children: isAddUser ? \"Cancel Add User\" : \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isAddUser ? /*#__PURE__*/_jsxDEV(AddUser, {\n      onAddOrEdit: editUser ? handleEditUser : handleAddUser // Conditionally pass the appropriate function\n      ,\n      editUser: editUser // For editing purposes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserList, {\n      users: currentUsers // Only display the current users for the page\n      ,\n      onEdit: user => {\n        setEditUser(user); // Set the user to edit\n        setIsAddUser(true); // Open the AddUser form for editing\n      },\n      onDelete: handleDeleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalUsers: users.length // Total number of users\n      ,\n      usersPerPage: usersPerPage // Number of users per page\n      ,\n      currentPage: currentPage // Current page number\n      ,\n      onPageChange: handlePageChange // Function to handle page change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+vSSUxRRZuu8zKMO8LNy0lqaCaM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AddUser","UserList","Pagination","jsxDEV","_jsxDEV","App","_s","users","setUsers","isAddUser","setIsAddUser","editUser","setEditUser","currentPage","setCurrentPage","usersPerPage","fetchUsers","response","fetch","data","json","usersWithFirstLastNames","map","user","firstName","lastName","name","split","department","company","handleAddUser","newUser","prevUsers","handleEditUser","updatedUser","id","handleDeleteUser","userId","filter","indexOfLastUser","indexOfFirstUser","currentUsers","slice","handlePageChange","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddOrEdit","onEdit","onDelete","totalUsers","length","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/haric/OneDrive/Desktop/user-management-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddUser from \"./components/AddUser\";\r\nimport UserList from \"./components/UserList\";\r\nimport Pagination from \"./components/Pagination\";\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState([]);\r\n  const [isAddUser, setIsAddUser] = useState(false);\r\n  const [editUser, setEditUser] = useState(null); // Track which user to edit\r\n  const [currentPage, setCurrentPage] = useState(1); // Track current page\r\n  const [usersPerPage] = useState(10); // Number of users per page\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const data = await response.json();\r\n    \r\n    // Map the data to split the name into firstName and lastName\r\n    const usersWithFirstLastNames = data.map((user) => {\r\n      const [firstName, lastName] = user.name.split(\" \");\r\n      return {\r\n        ...user,\r\n        firstName,\r\n        lastName,\r\n        department: user.company.name, // Using company name for department\r\n      };\r\n    });\r\n\r\n    setUsers(usersWithFirstLastNames);\r\n  };\r\n\r\n  const handleAddUser = (newUser) => {\r\n    setUsers((prevUsers) => [...prevUsers, newUser]);\r\n    setIsAddUser(false); // Close the AddUser form after adding\r\n  };\r\n\r\n  const handleEditUser = (updatedUser) => {\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((user) => (user.id === updatedUser.id ? updatedUser : user))\r\n    );\r\n    setEditUser(null); // Clear edit user after saving\r\n    setIsAddUser(false); // Close the form after editing\r\n  };\r\n\r\n  const handleDeleteUser = (userId) => {\r\n    setUsers((prevUsers) => prevUsers.filter((user) => user.id !== userId));\r\n  };\r\n\r\n  // Calculate the current users to display based on the current page and users per page\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Management Dashboard</h1>\r\n\r\n      <button onClick={() => setIsAddUser(!isAddUser)}>\r\n        {isAddUser ? \"Cancel Add User\" : \"Add User\"}\r\n      </button>\r\n\r\n      {isAddUser ? (\r\n        <AddUser\r\n          onAddOrEdit={editUser ? handleEditUser : handleAddUser} // Conditionally pass the appropriate function\r\n          editUser={editUser} // For editing purposes\r\n        />\r\n      ) : (\r\n        <UserList\r\n          users={currentUsers} // Only display the current users for the page\r\n          onEdit={(user) => {\r\n            setEditUser(user); // Set the user to edit\r\n            setIsAddUser(true); // Open the AddUser form for editing\r\n          }}\r\n          onDelete={handleDeleteUser}\r\n        />\r\n      )}\r\n\r\n      <Pagination\r\n        totalUsers={users.length} // Total number of users\r\n        usersPerPage={usersPerPage} // Number of users per page\r\n        currentPage={currentPage} // Current page number\r\n        onPageChange={handlePageChange} // Function to handle page change\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}